# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

parameters:
  # Workflow Config
  android_apk:
    default: false
    type: boolean
  android_aab:
    default: false
    type: boolean
  version:
    default: '1.0.0'
    type: string
  build:
    default: '1'
    type: string

executors:
  linux_android:
    parameters:
      gradle_options:
        description: Gradle command options. Disables Gradle Daemon for CI environment as we are building the app only once per CI run.
        type: string
        default: '-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=4'
    resource_class: xlarge
    environment:
      - GRADLE_OPTS: <<parameters.gradle_options>>
    docker:
      - image: reactnativecommunity/react-native-android

commands:
  npm_install:
    steps:
      - checkout
      - restore_cache:
          key: npm-v1-{{ checksum "package.json" }}-{{ arch }}
      - run: npm install

  save_npm_cache:
    steps:
      - save_cache:
          key: npm-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules
      - persist_to_workspace:
          root: .
          paths:
            - .
  bundle_setup:
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
      - run: bundle install
      - save_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle

jobs:
  node_setup:
    resource_class: medium
    working_directory: ~/pagalfan
    docker:
      - image: cimg/node:14.19.1
    steps:
      - npm_install
      - save_npm_cache

  build_android:
    working_directory: ~/pagalfan
    executor: linux_android
    parameters:
      buildType:
        description: options are build_apk, build_aab (apk or aab file)
        type: string
        default: 'build_apk'
    steps:
      - bundle_setup
      - run:
          name: Build android app
          command: |
            bundle exec fastlane android <<parameters.buildType>> version:<<pipeline.parameters.version>> build:<<pipeline.parameters.build>>
      - run:
          name: Move build output to artifacts directory
          command: |
            cp -r ./android/app/build/outputs/ ./artifacts
      - store_artifacts:
          name: Artifact generated app build
          path: ./artifacts

workflows:
  build_android_apk:
    when: <<pipeline.parameters.android_apk>>
    jobs:
      - node_setup
      - build_android:
          buildType: 'build_apk'
          requires:
            - node_setup

  build_android_aab:
    when: <<pipeline.parameters.android_aab>>
    jobs:
      - node_setup
      - build_android:
          buildType: 'build_aab'
          requires:
            - node_setup
